

function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local multipart, urlencoded, json, bodyParser = multipart, urlencoded, json, bodyParser;
multipart = require(global, ("./multipart"));
urlencoded = require(global, ("./urlencoded"));
json = require(global, ("./json"));
exports = (function () local _r = (function () bodyParser = (function (this, options)
local bodyParser = _debug.getinfo(1, 'f').func;
local ____urlencoded, ____multipart, ____json, bodyParser = ____urlencoded, ____multipart, ____json, bodyParser;
__urlencoded = urlencoded(global, options);
__multipart = multipart(global, options);
__json = json(global, options);
if true then return (function () bodyParser = (function (this, req, res, next)
local bodyParser = _debug.getinfo(1, 'f').func;
if __json(global, req, res, (function (this, err)
if _truthy(err) then
if true then return next(global, err); end;
end
if __urlencoded(global, req, res, (function (this, err)
if _truthy(err) then
if true then return next(global, err); end;
end
if __multipart(global, req, res, next) then end;
end)) then end;
end)) then end;
end); return bodyParser; end)(); end;
end); return bodyParser; end)(); (module).exports = _r; return _r; end)();

return _module.exports;
end