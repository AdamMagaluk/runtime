

function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local utils, cookie, Cookie = utils, cookie, Cookie;
utils = require(global, ("../../utils"));
cookie = require(global, ("cookie"));
Cookie = (function () local _r = (function () Cookie = (function (this, options)
local Cookie = _debug.getinfo(1, 'f').func;
(this).path = ("/");
(this).maxAge = (null);
(this).httpOnly = (true);
if _truthy(options) then
if utils:merge(this, options) then end;
end
(this).originalMaxAge = (_truthy((undefined == (this).originalMaxAge)) and {(this).maxAge} or {(this).originalMaxAge})[1];
end); return Cookie; end)(); (module).exports = _r; return _r; end)();
(Cookie).prototype = _obj({
  ["expires"]=(function (this, date)
(this)._expires = date;
(this).originalMaxAge = (this).maxAge;
end),
  ["expires"]=(function (this)
if true then return (this)._expires; end;
end),
  ["maxAge"]=(function (this, ms)
(this).expires = (_truthy((("number") == _typeof(ms))) and {_new(Date, (Date:now() + ms))} or {ms})[1];
end),
  ["maxAge"]=(function (this)
if true then return (_instanceof((this).expires, Date) and {((this).expires:valueOf() - Date:now())} or {(this).expires})[1]; end;
end),
  ["data"]=(function (this)
if true then return _obj({
  ["originalMaxAge"]=(this).originalMaxAge,
  ["expires"]=(this)._expires,
  ["secure"]=(this).secure,
  ["httpOnly"]=(this).httpOnly,
  ["domain"]=(this).domain,
  ["path"]=(this).path}); end;
end),
  ["hasLongExpires"]=(function (this)
local week = week;
week = (604800000);
if true then return ((this).maxAge > (((4) * week))); end;
end),
  ["serialize"]=(function (this, name, val)
if true then return cookie:serialize(name, val, this.data); end;
end),
  ["toJSON"]=(function (this)
if true then return (this).data; end;
end)});

return _module.exports;
end