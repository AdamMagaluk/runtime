

function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local vhost = vhost;
(module).exports = (function () vhost = (function (this, hostname, server)
local vhost = _debug.getinfo(1, 'f').func;
local regexp, vhost = regexp, vhost;
if (not (hostname)) then
_error(_new(Error, ("vhost hostname required")))
end
if (not (server)) then
_error(_new(Error, ("vhost server required")))
end
regexp = _new(RegExp, ((("^") + hostname:replace(_regexp("[^*\\w]", "g"), ("\\$&")):replace(_regexp("[*]", "g"), ("(?:.*?)")))  + ("$")), ("i"));
if _truthy((server).onvhost) then
if server:onvhost(hostname) then end;
end
if true then return (function () vhost = (function (this, req, res, next)
local vhost = _debug.getinfo(1, 'f').func;
local host = host;
if (not (((req).headers).host)) then
if true then return next(global); end;
end
host = (((req).headers).host:split((":")))[(0)];
if (not (regexp:test(host))) then
if true then return next(global); end;
end
if _truthy((("function") == _typeof(server))) then
if true then return server(global, req, res, next); end;
end
if server:emit(("request"), req, res) then end;
end); return vhost; end)(); end;
end); return vhost; end)();

return _module.exports;
end