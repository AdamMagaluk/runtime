function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local debug = debug;
debug = _obj({
  ["foo"]=require(global, ("../"))(global, ("test:foo")),
  ["bar"]=require(global, ("../"))(global, ("test:bar")),
  ["baz"]=require(global, ("../"))(global, ("test:baz"))});
if debug:foo(("foo"))
 then end;
if debug:bar(("bar"))
 then end;
if debug:baz(("baz")) then end;

return _module.exports;
end