-- DEBUG=* node example/worker
-- DEBUG=worker:* node example/worker
-- DEBUG=worker:a node example/worker
-- DEBUG=worker:b node example/worker

function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local a, b, work, workb = a, b, work, workb;
work = (function (this)
local work = _debug.getinfo(1, 'f').func;
if a(global, ("doing lots of uninteresting work")) then end;
if setTimeout(global, work, (Math:random() * (1000))) then end;
end);
workb = (function (this)
local workb = _debug.getinfo(1, 'f').func;
if b(global, ("doing some work")) then end;
if setTimeout(global, workb, (Math:random() * (2000))) then end;
end);
a = require(global, ("../"))(global, ("worker:a"));
b = require(global, ("../"))(global, ("worker:b"));
if work(global) then end;
if workb(global) then end;

return _module.exports;
end