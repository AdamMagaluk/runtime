function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local http, util, multiparty, PORT, server = http, util, multiparty, PORT, server;
http = require(global, ("http"));
util = require(global, ("util"));
multiparty = require(global, ("../"));
PORT = ((process).env).PORT or (27372);
server = http:createServer((function (this, req, res)
local form = form;
if ((req).url == ("/")) then
if res:writeHead((200), _obj({
  ["content-type"]=("text/html")})) then end;
if (function () local base, prop = res, "end"; return base[prop](base, ((((("<form action=\"/upload\" enctype=\"multipart/form-data\" method=\"post\">")+
      ("<input type=\"text\" name=\"title\"><br>"))+
      ("<input type=\"file\" name=\"upload\" multiple=\"multiple\"><br>"))+
      ("<input type=\"submit\" value=\"Upload\">"))+
      ("</form>"))); end)() then end;
else
if ((req).url == ("/upload")) then
form = _new((multiparty).Form);
if form:parse(req, (function (this, err, fields, files)
if _truthy(err) then
if res:writeHead((400), _obj({
  ["content-type"]=("text/plain")})) then end;
if (function () local base, prop = res, "end"; return base[prop](base, (("invalid request: ") + (err).message)); end)() then end;
if true then return; end;
end
if res:writeHead((200), _obj({
  ["content-type"]=("text/plain")})) then end;
if res:write((("received fields:\n\n ")+util:inspect(fields))) then end;
if res:write(("\n\n")) then end;
if (function () local base, prop = res, "end"; return base[prop](base, (("received files:\n\n ")+util:inspect(files))); end)() then end;
end)) then end;
else
if res:writeHead((404), _obj({
  ["content-type"]=("text/plain")})) then end;
if (function () local base, prop = res, "end"; return base[prop](base, ("404")); end)() then end;
end
end
end));
if server:listen(PORT, (function (this)
if console:info(((("listening on http:--0.0.0.0:")+PORT)+("/"))) then end;
end)) then end;

return _module.exports;
end