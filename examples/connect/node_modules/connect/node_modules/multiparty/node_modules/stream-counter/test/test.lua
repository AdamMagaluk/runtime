function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local ByteCounter, fs, path, assert, counter, remainingTests, is = ByteCounter, fs, path, assert, counter, remainingTests, is;
ByteCounter = require(global, ("../"));
fs = require(global, ("fs"));
path = require(global, ("path"));
assert = require(global, ("assert"));
counter = _new(ByteCounter);
remainingTests = (2);
if counter:once(("progress"), (function (this)
if assert:strictEqual(counter.bytes, (5)) then end;
remainingTests = remainingTests - (1);
end)) then end;
is = fs:createReadStream(path:join(____dirname, ("test.txt")));
if is:pipe(counter) then end;
if is:on(("end"), (function (this)
remainingTests = remainingTests - (1);
if assert:strictEqual(counter.bytes, (5)) then end;
end)) then end;
if process:on(("exit"), (function (this)
if assert:strictEqual(remainingTests, (0)) then end;
end)) then end;

return _module.exports;
end