function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local http, fs, connections, server, port = http, fs, connections, server, port;
http = require(global, ("http"));
fs = require(global, ("fs"));
connections = (0);
server = http:createServer((function (this, req, res)
local socket = socket;
socket = (req).socket;
if console:log(("Request: %s %s -> %s"), req.method, req.url, socket.filename) then end;
if req:on(("end"), (function (this)
if ((req).url ~= ("/")) then
if (function () local base, prop = res, "end"; return base[prop](base, JSON:stringify(_obj({
  ["method"]=(req).method,
  ["url"]=(req).url,
  ["filename"]=(socket).filename}))); end)() then end;
if true then return; end;
end
if res:writeHead((200), _obj({
  ["content-type"]=("text/html")})) then end;
if (function () local base, prop = res, "end"; return base[prop](base, ((((("<form action=\"/upload\" enctype=\"multipart/form-data\" method=\"post\">")+
      ("<input type=\"text\" name=\"title\"><br>"))+
      ("<input type=\"file\" name=\"upload\" multiple=\"multiple\"><br>"))+
      ("<input type=\"submit\" value=\"Upload\">"))+
      ("</form>"))); end)() then end;
end)) then end;
end));
if server:on(("connection"), (function (this, socket)
(function () local _r = connections; connections = _r + 1; return _r end)();
(socket).id = connections;
(socket).filename = ((("connection-") + (socket).id) + (".http"));
(socket).file = fs:createWriteStream(socket.filename);
if socket:pipe(socket.file) then end;
if console:log(("--> %s"), socket.filename) then end;
if socket:on(("close"), (function (this)
if console:log(("<-- %s"), socket.filename) then end;
end)) then end;
end)) then end;
port = ((process).env).PORT or (8080);
if server:listen(port, (function (this)
if console:log(("Recording connections on port %s"), port) then end;
end)) then end;

return _module.exports;
end