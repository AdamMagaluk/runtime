function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local superagent, multiparty, http, server = superagent, multiparty, http, server;
superagent = require(global, ("superagent"));
multiparty = require(global, ("../../"));
http = require(global, ("http"));
server = http:createServer((function (this, req, resp)
local form, errCount = form, errCount;
form = _new((multiparty).Form);
errCount = (0);
if form:on(("error"), (function (this, err)
errCount = errCount + (1);
if (function () local base, prop = resp, "end"; return base[prop](base); end)() then end;
end)) then end;
if form:on(("file"), (function (this, name, file)

end)) then end;
if form:on(("field"), (function (this, name, file)

end)) then end;
if form:parse(req) then end;
end));
if server:listen((function (this)
local url, req = url, req;
url = ((("http:--localhost:") + (server:address()).port) + ("/"));
req = superagent:post(url);
if req:set(("Content-Type"), ("multipart/form-data; boundary=foo"))
   then end;
if req:write(("--foo\r\n"))
   then end;
if req:write(("Content-filename=\"foo.txt\"\r\n"))
   then end;
if req:write(("\r\n"))
   then end;
if req:write(("some text here"))
   then end;
if req:write(("Content-Disposition: form-data; name=\"text\"; filename=\"bar.txt\"\r\n"))
   then end;
if req:write(("\r\n"))
   then end;
if req:write(("some more text stuff"))
   then end;
if req:write(("\r\n--foo--"))
   then end;
if (function () local base, prop = req, "end"; return base[prop](base, (function (this, err, resp)
if server:close() then end;
end)); end)() then end;
end)) then end;

return _module.exports;
end