function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local crypto, ratio, urlReady, uid = crypto, ratio, urlReady, uid;
urlReady = (function (this, str)
local urlReady = _debug.getinfo(1, 'f').func;
if true then return str:replace(_regexp("\\+", "g"), ("_")):replace(_regexp("\\/", "g"), ("-")); end;
end);
uid = (function (this, length, cb)
local uid = _debug.getinfo(1, 'f').func;
local numbytes = numbytes;
numbytes = Math:ceil((length * ratio));
if (_typeof(cb) == ("undefined")) then
if true then return urlReady(global, crypto:randomBytes(numbytes):toString(("base64")):slice((0), length)); end;
else
if crypto:randomBytes(numbytes, (function (this, err, bytes)
if _truthy(err) then
if true then return cb(global, err); end;
end
if cb(global, (null), urlReady(global, bytes:toString(("base64")):slice((0), length))) then end;
end))
   then end;
end
end);
crypto = require(global, ("crypto"));
ratio = (Math:log((64)) / Math:log((256)));
(module).exports = uid;

return _module.exports;
end