function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local connect, proto, Route, Router, req, res, utils, createApplication, key = connect, proto, Route, Router, req, res, utils, createApplication, key;
createApplication = (function (this)
local createApplication = _debug.getinfo(1, 'f').func;
local app = app;
app = connect(global);
if utils:merge(app, proto) then end;
(app).request = _obj({
  ["__proto__"]=req,
  ["app"]=app});
(app).response = _obj({
  ["__proto__"]=res,
  ["app"]=app});
if app:init() then end;
if true then return app; end;
end);
connect = require(global, ("connect"));
proto = require(global, ("./application"));
Route = require(global, ("./router/route"));
Router = require(global, ("./router"));
req = require(global, ("./request"));
res = require(global, ("./response"));
utils = (connect).utils;
exports = (function () local _r = createApplication; (module).exports = _r; return _r; end)();
(exports).mime = (connect).mime;
for key in _pairs((connect).middleware) do
if Object:defineProperty(exports, key, Object:getOwnPropertyDescriptor(connect.middleware, key)) then end;
end
(exports).createServer = (function (this)
if console:warn(("Warning: express.createServer() is deprecated, express")) then end;
if console:warn(("applications no longer inherit from http.Server,")) then end;
if console:warn(("please use:")) then end;
if console:warn(("")) then end;
if console:warn(("  var express = require(\"express\");")) then end;
if console:warn(("  var app = express();")) then end;
if console:warn(("")) then end;
if true then return createApplication(global); end;
end);
(exports).application = proto;
(exports).request = req;
(exports).response = res;
(exports).Route = Route;
(exports).Router = Router;
((exports).errorHandler).title = ("Express");

return _module.exports;
end