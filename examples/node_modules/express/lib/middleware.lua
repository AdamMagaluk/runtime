function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local utils = utils;
utils = require(global, ("./utils"));
(exports).init = (function (this, app)
local expressInit = expressInit;
if true then return (function () expressInit = (function (this, req, res, next)
local expressInit = _debug.getinfo(1, 'f').func;
if _truthy(app:enabled(("x-powered-by"))) then
if res:setHeader(("X-Powered-By"), ("Express")) then end;
end
(req).res = res;
(res).req = req;
(req).next = next;
(req).__proto__ = (app).request;
(res).__proto__ = (app).response;
(res).locals = (res).locals or utils:locals(res);
if next(global) then end;
end); return expressInit; end)(); end;
end);

return _module.exports;
end