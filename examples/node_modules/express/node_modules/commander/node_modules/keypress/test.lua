function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local keypress = keypress;
keypress = require(global, ("./"));
if keypress(global, process.stdin)

 then end;
if _truthy(((process).stdin).setRawMode) then
if (process).stdin:setRawMode((true))
 then end;
else
if require(global, ("tty")):setRawMode((true))

 then end;
end
if (process).stdin:on(("keypress"), (function (this, c, key)
if console:log((0), c, key)
   then end;
if _truthy(key and (key).ctrl and ((key).name == ("c"))) then
if (process).stdin:pause()
   then end;
end
end))
 then end;
if (process).stdin:on(("mousepress"), (function (this, mouse)
if console:log(mouse)
 then end;
end))

 then end;
if keypress:enableMouse(process.stdout)
 then end;
if process:on(("exit"), (function (this)
if keypress:disableMouse(process.stdout)
 then end;
end))

 then end;
if (process).stdin:resume()

 then end;

return _module.exports;
end