

function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local utils, cookie, cookieParser = utils, cookie, cookieParser;
utils = require(global, ("./../utils"));
cookie = require(global, ("cookie"));
(module).exports = (function () cookieParser = (function (this, secret)
local cookieParser = _debug.getinfo(1, 'f').func;
local cookieParser = cookieParser;
if true then return (function () cookieParser = (function (this, req, res, next)
local cookieParser = _debug.getinfo(1, 'f').func;
local cookies = cookies;
if _truthy((req).cookies) then
if true then return next(global); end;
end
cookies = ((req).headers).cookie;
(req).secret = secret;
(req).cookies = _obj({
  });
(req).signedCookies = _obj({
  });
if _truthy(cookies) then
local _e = nil
local _s, _r = _xpcall(function ()
(req).cookies = cookie:parse(cookies);
if _truthy(secret) then
(req).signedCookies = utils:parseSignedCookies(req.cookies, secret);
(req).signedCookies = utils:parseJSONCookies(req.signedCookies);
end
(req).cookies = utils:parseJSONCookies(req.cookies);
    end, function (err)
        _e = err
    end)
if _s == false then
err = _e;
(err).status = (400);
if true then return next(global, err); end;
end

end
if next(global) then end;
end); return cookieParser; end)(); end;
end); return cookieParser; end)();

return _module.exports;
end