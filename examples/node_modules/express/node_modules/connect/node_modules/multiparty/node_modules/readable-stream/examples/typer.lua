function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local fs, fst, Readable, rst = fs, fst, Readable, rst;
fs = require(global, ("fs"));
fst = fs:createReadStream(____filename);
Readable = require(global, ("../readable.js"));
rst = _new(Readable);
if rst:wrap(fst) then end;
if rst:on(("end"), (function (this)
if (process).stdin:pause() then end;
end)) then end;
if (process).stdin:setRawMode((true)) then end;
if (process).stdin:on(("data"), (function (this)
local c = c;
c = rst:read((3));
if (not (c)) then
if true then return setTimeout(global, process.exit, (500)); end;
end
if (process).stdout:write(c) then end;
end)) then end;
if (process).stdin:resume() then end;

return _module.exports;
end