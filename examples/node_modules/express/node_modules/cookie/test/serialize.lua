-- builtin
function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local assert, cookie = assert, cookie;
assert = require(global, ("assert"));
cookie = require(global, (".."));
if suite(global, ("serialize")) then end;
if test(global, ("basic"), (function (this)
if assert:equal(("foo=bar"), cookie:serialize(("foo"), ("bar"))) then end;
if assert:equal(("foo=bar%20baz"), cookie:serialize(("foo"), ("bar baz"))) then end;
end)) then end;
if test(global, ("path"), (function (this)
if assert:equal(("foo=bar; Path=/"), cookie:serialize(("foo"), ("bar"), _obj({
  ["path"]=("/")}))) then end;
end)) then end;
if test(global, ("secure"), (function (this)
if assert:equal(("foo=bar; Secure"), cookie:serialize(("foo"), ("bar"), _obj({
  ["secure"]=true}))) then end;
if assert:equal(("foo=bar"), cookie:serialize(("foo"), ("bar"), _obj({
  ["secure"]=false}))) then end;
end)) then end;
if test(global, ("domain"), (function (this)
if assert:equal(("foo=bar; Domain=example.com"), cookie:serialize(("foo"), ("bar"), _obj({
  ["domain"]=("example.com")}))) then end;
end)) then end;
if test(global, ("httpOnly"), (function (this)
if assert:equal(("foo=bar; HttpOnly"), cookie:serialize(("foo"), ("bar"), _obj({
  ["httpOnly"]=true}))) then end;
end)) then end;
if test(global, ("maxAge"), (function (this)
if assert:equal(("foo=bar; Max-Age=1000"), cookie:serialize(("foo"), ("bar"), _obj({
  ["maxAge"]=1000}))) then end;
end)) then end;
if test(global, ("escaping"), (function (this)
if assert:deepEqual(("cat=%2B%20"), cookie:serialize(("cat"), ("+ "))) then end;
end)) then end;
if test(global, ("parse->serialize"), (function (this)
if assert:deepEqual(_obj({
  ["cat"]=("foo=123&name=baz five")}), cookie:parse(cookie:serialize(("cat"), ("foo=123&name=baz five")))) then end;
if assert:deepEqual(_obj({
  ["cat"]=(" \";/")}), cookie:parse(cookie:serialize(("cat"), (" \";/")))) then end;
end)) then end;
if test(global, ("unencoded"), (function (this)
if assert:deepEqual(("cat=+ "), cookie:serialize(("cat"), ("+ "), _obj({
  ["encode"]=(function (this, value)
if true then return value; end;
end)}))) then end;
end))
 then end;

return _module.exports;
end