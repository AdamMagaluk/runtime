function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local debug, http, name = debug, http, name;
debug = require(global, ("../"))(global, ("http"));
http = require(global, ("http"));
name = ("My App");
if debug(global, ("booting %s"), name) then end;
if http:createServer((function (this, req, res)
if debug(global, (((req).method + (" ")) + (req).url)) then end;
if (function () local base, prop = res, "end"; return base[prop](base, ("hello\n")); end)() then end;
end)):listen((3000), (function (this)
if debug(global, ("listening")) then end;
end)) then end;
if require(global, ("./worker")) then end;

return _module.exports;
end