function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local mkdirp, path, fs, test = mkdirp, path, fs, test;
mkdirp = require(global, ("../"));
path = require(global, ("path"));
fs = require(global, ("fs"));
test = (require(global, ("tap"))).test;
if test(global, ("return value"), (function (this, t)
local x, y, z, file, made = x, y, z, file, made;
if t:plan((2)) then end;
x = Math:floor((Math:random() * Math:pow((16), (4)))):toString((16));
y = Math:floor((Math:random() * Math:pow((16), (4)))):toString((16));
z = Math:floor((Math:random() * Math:pow((16), (4)))):toString((16));
file = (("/tmp/") + _arr({[0]=x, y, z}):join(("/")));
made = mkdirp:sync(file);
if t:equal(made, (("/tmp/") + x)) then end;
made = mkdirp:sync(file);
if t:equal(made, (null)) then end;
end)) then end;

return _module.exports;
end