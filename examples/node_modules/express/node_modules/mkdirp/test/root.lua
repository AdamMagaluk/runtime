function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local mkdirp, path, fs, test = mkdirp, path, fs, test;
mkdirp = require(global, ("../"));
path = require(global, ("path"));
fs = require(global, ("fs"));
test = (require(global, ("tap"))).test;
if test(global, ("root"), (function (this, t)
local file = file;
file = path:resolve(("/"));
if mkdirp(global, file, (493), (function (this, err)
if _truthy(err) then
_error(err)
end
if fs:stat(file, (function (this, er, stat)
if _truthy(er) then
_error(er)
end
if t:ok(stat:isDirectory(), ("target is a directory")) then end;
if (function () local base, prop = t, "end"; return base[prop](base); end)() then end;
end))
     then end;
end)) then end;
end)) then end;

return _module.exports;
end