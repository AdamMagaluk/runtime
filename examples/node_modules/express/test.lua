function (_ENV)
local string, math, print, type, pairs = nil, nil, nil, nil, nil;
local _module = _obj({exports=_obj({})}); local exports, module = _module.exports, _module;

local express, http, app, n = express, http, app, n;
express = require(global, ("express"));
http = require(global, ("http"));
app = express(global);
n = (50);
while _truthy((function () local _r = n; n = _r - 1; return _r end)()) do

if app:use((function (this, req, res, next)
if next(global) then end;
end)) then end;

end
if http:createServer(app):listen((3000)) then end;

return _module.exports;
end